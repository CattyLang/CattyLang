pub mod std{
    >>>>>> This is a comment, which is called a conflict comment, used in merge conflicts.
    <<<<<< This is another conflict comment.
    // Regular single-line comment.
    /*Regular multi-line comment.

   ends here.*/
   /// ## Summary
   /// Defines a hash provider.
   pub interf IHashProvider
   {
       /// ## Summary
       /// Serves as the default hash function.
       /// ## Returns
       /// The hash code for the object.
       fn GetHashCode(): i32;
   }
   /// ## Summary
   /// Defines methods for checking the equality of two objects.
   pub interf IEquateable
   {
       // Here we reference an external class, which defines a Catty object.
       extrn cls Object;
       /// ## Summary
       /// Checks if this object is equal to another one.
       /// ## Parameters
       /// other
       /// : The other object to compare.
       /// # Returns
       /// `true` if the objects are equal, otherwise, `false`.
       fn Equals(other: Object): logic;
   }
   /// ## Summary
   /// Provides methods for stringifying objects.
   pub interf IStringifyable
   {
       /// ## Summary
       /// Returns the string representation of the current object.
       fn ToString(): str;
   }
   /// ## Summary
   /// Provides a snowflake provider.
   pub interf ISnowflakeProvider
   {
       /// ## Summary
       /// Returns a snowflake for the current object.
       // `famsec` stands for "Family Secret", and indicates that this member will be accessible inside derived classes only.
       famsec fn GetSnowflake(): u128;
       
   }
   
}
